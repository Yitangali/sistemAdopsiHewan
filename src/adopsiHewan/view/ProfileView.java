/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package adopsiHewan.view;

import java.sql.*;
import javax.swing.JOptionPane;
import adopsiHewan.controller.ProfileController;

/**
 *
 * @author LENOVO
 */
public class ProfileView extends javax.swing.JFrame {

    private Connection connection;
    private int userId;
            
    public ProfileView(int userId) {
        this.userId = userId;
        initComponents();
        connectToDatabase();
        loadUserProfile();
    }
    
    private void connectToDatabase() {
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_adopsi", "root", "password");
            if (connection!= null) {
                System.out.println("Database terhubung!");
            }
        } catch (SQLException e) {
            System.out.println("Gagal koneksi ke database: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    private void loadUserProfile() {
        if (connection == null) {
            System.out.println("Tidak bisa terkoneksi");
            return;
        }
        try {
            String query = "SELECT * FROM user WHERE email = ?";
            PreparedStatement stmt = connection.prepareStatement(query);
            stmt.setInt(1, userId);
            ResultSet rs = stmt.executeQuery();
            
            if (rs.next()) {
                txtNama.setText(rs.getString("nama"));
                txtEmail.setText(rs.getString("email"));
                txtAlamat.setText(rs.getString("alamat"));
                txtNoHp.setText(rs.getString("no_hp"));
                txtPassword.setText(rs.getString("password"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void editProfile() {
        txtNama.setEditable(true);
        txtEmail.setEditable(true);
        txtAlamat.setEditable(true);
        txtNoHp.setEditable(true);
        txtPassword.setEditable(true);
    }
    
    private void updateProfile() {
        try {
            String query = "UPDATE user SET nama = ?, email = ?, alamat = ?, no_hp = ?, password =? WHERE id_user = ?";
            PreparedStatement stmt = connection.prepareStatement(query);
            stmt.setString(1, txtNama.getText());
            stmt.setString(2, txtEmail.getText());
            stmt.setString(3, txtAlamat.getText());
            stmt.setString(4, txtNoHp.getText());
            stmt.setString(5, txtPassword.getText());
            stmt.setInt(6, userId);
            
            int rowsUpdated = stmt.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Profile berhasil diEdit.");
                loadUserProfile();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void deleteAccount() {
        int confirmation = JOptionPane.showConfirmDialog(this, "Apa anda yakin akan menghapus akun?", "Hapus Akun", JOptionPane.YES_NO_OPTION);
        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                String deleteQuery = "DELETE FROM user WHERE id_user = ?";
                PreparedStatement stmt = connection.prepareStatement(deleteQuery);
                stmt.setInt(1, userId);
                stmt.executeUpdate();

                JOptionPane.showMessageDialog(this, "Account deleted successfully.");
                System.exit(0);  // Keluar aplikasi setelah akun dihapus
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NamaLabel = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        AlamatLabel = new javax.swing.JLabel();
        txtAlamat = new javax.swing.JTextField();
        EmailLabel = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        PasswordLabel = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        NoHpLabel = new javax.swing.JLabel();
        txtNoHp = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        NamaLabel.setText("Nama");

        AlamatLabel.setText("Alamat");

        EmailLabel.setText("Email");

        PasswordLabel.setText("Password");

        NoHpLabel.setText("No Hp");

        btnEdit.setText("Edit Profile");

        btnRefresh.setText("Refresh");

        btnHapus.setText("Hapus Akun");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NamaLabel)
                            .addComponent(AlamatLabel)
                            .addComponent(EmailLabel))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNama)
                            .addComponent(txtAlamat)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(PasswordLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(NoHpLabel)
                                .addGap(28, 28, 28)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPassword)
                            .addComponent(txtNoHp, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))))
                .addContainerGap(450, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEdit)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addGap(18, 18, 18)
                .addComponent(btnHapus)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NamaLabel)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AlamatLabel)
                    .addComponent(txtAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailLabel)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordLabel)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NoHpLabel)
                    .addComponent(txtNoHp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnRefresh)
                    .addComponent(btnHapus))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed

        int confirmation = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to delete your account?", 
            "Delete Account", 
            JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                String deleteQuery = "DELETE FROM user WHERE id_user = ?";
                PreparedStatement stmt = connection.prepareStatement(deleteQuery);
                stmt.setInt(1, userId); 

                int rowsAffected = stmt.executeUpdate(); 

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Your account has been deleted successfully.");
                    System.exit(0);  // Keluar aplikasi
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Account could not be deleted.");
                }

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "An error occurred while deleting the account.");
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            private int idUser;
            @Override
            public void run() {
                new ProfileView(idUser).setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AlamatLabel;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JLabel NamaLabel;
    private javax.swing.JLabel NoHpLabel;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JTextField txtAlamat;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNoHp;
    private javax.swing.JTextField txtPassword;
    // End of variables declaration//GEN-END:variables
}
