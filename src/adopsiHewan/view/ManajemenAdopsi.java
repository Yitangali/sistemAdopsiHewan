/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package adopsiHewan.view;


import adopsiHewan.controller.AdopsiController;
import adopsiHewan.model.Adopsi;
import adopsiHewan.view.DashboardAdminView;
import adopsiHewan.view.ManajemenHewanView;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import java.util.List;
/**
 *
 * @author M Tiyas F Akbar
 */
public class ManajemenAdopsi extends javax.swing.JFrame {
    private AdopsiController controller = new AdopsiController();
    private DefaultTableModel tableModel;
    DashboardAdminView dav;
    ManajemenHewanView mhv;
    /**
     * Creates new form ManajemenAdopsi
     */
    public ManajemenAdopsi() {
        initComponents();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableAdopsi = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCariIdAdopsi = new javax.swing.JTextField();
        btnUbah = new javax.swing.JButton();
        btnSetujui = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCari = new javax.swing.JButton();
        btnTolak = new javax.swing.JButton();
        btnShowAll = new javax.swing.JButton();
        btnDashboard = new javax.swing.JButton();
        btnManajemenHewan = new javax.swing.JButton();
        btnManajemenAdopsi = new javax.swing.JButton();
        btnRiwayatAdopsi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableAdopsi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Adopsi", "ID User", "ID Hewan", "Tanggal Ajuan", "Status", "Catatan"
            }
        ));
        jScrollPane1.setViewportView(tableAdopsi);

        jLabel1.setText("MANAJEMEN ADOPSI");

        jLabel2.setText("ID Adopsi");

        btnUbah.setText("Ubah data");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnSetujui.setText("Setujui Adopsi");
        btnSetujui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetujuiActionPerformed(evt);
            }
        });

        btnDelete.setText("Hapus");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnTolak.setText("Tolak Adopsi");
        btnTolak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTolakActionPerformed(evt);
            }
        });

        btnShowAll.setText("Show All");
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        btnDashboard.setText("Dashboard");
        btnDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDashboardActionPerformed(evt);
            }
        });

        btnManajemenHewan.setText("Manajemen Hewan");
        btnManajemenHewan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManajemenHewanActionPerformed(evt);
            }
        });

        btnManajemenAdopsi.setText("Manajemen Adopsi");
        btnManajemenAdopsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManajemenAdopsiActionPerformed(evt);
            }
        });

        btnRiwayatAdopsi.setText("Riwayat Adopsi");
        btnRiwayatAdopsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRiwayatAdopsiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSetujui, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(btnTolak, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(btnShowAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtCariIdAdopsi, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCari)
                .addGap(176, 176, 176))
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 924, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnManajemenAdopsi, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnDashboard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnManajemenHewan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(368, 368, 368)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRiwayatAdopsi)
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDashboard)
                    .addComponent(jLabel1)
                    .addComponent(btnRiwayatAdopsi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnManajemenHewan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnManajemenAdopsi)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCariIdAdopsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari)
                    .addComponent(btnShowAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnTolak)
                    .addComponent(btnSetujui)
                    .addComponent(btnUbah))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadData() {
    DefaultTableModel model = (DefaultTableModel) tableAdopsi.getModel();
    model.setRowCount(0);
    List<Adopsi> list = controller.getAdopsiList();
    for (Adopsi adopsi : list) {
        model.addRow(new Object[]{
            adopsi.getIdAdopsi(), adopsi.getIdUser(), adopsi.getIdHewan(),
            adopsi.getTanggalAjuan(), adopsi.getStatus(), adopsi.getCatatan()
        });
    }
    model.fireTableDataChanged();
    
    tableModel = new DefaultTableModel(
    new String[]{"ID", "ID User", "ID Hewan", "Tanggal Ajuan", "Status", "Catatan"}, 0) {
    @Override
    public boolean isCellEditable(int row, int column) {
        return column >= 4;
    }
};
    
}
    
    private void btnSetujuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetujuiActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableAdopsi.getSelectedRow();
        if (selectedRow != -1) {
            int idAdopsi = Integer.parseInt(tableAdopsi.getValueAt(selectedRow, 0).toString());
            controller.updateStatus(idAdopsi, "diterima");
            loadData();
        }
    }//GEN-LAST:event_btnSetujuiActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        String idAdopsiStr = txtCariIdAdopsi.getText();
        
        if (!idAdopsiStr.isEmpty()) {
            try {
                int idAdopsi = Integer.parseInt(idAdopsiStr);
                List<Adopsi> hasilCari = controller.cariAdopsi(idAdopsi);
                
                if (!hasilCari.isEmpty()) {
                    DefaultTableModel model = (DefaultTableModel) tableAdopsi.getModel();
                    model.setRowCount(0);
                    for (Adopsi adopsi : hasilCari) {
                        model.addRow(new Object[] {
                            adopsi.getIdAdopsi(), adopsi.getIdUser(), adopsi.getIdHewan(),
                            adopsi.getTanggalAjuan(), adopsi.getStatus(), adopsi.getCatatan()
                        });
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Data tidak ditemukan!", "Peringatan", JOptionPane.WARNING_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Masukkan ID Adopsi yang valid!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Masukkan ID Adopsi untuk mencari!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableAdopsi.getSelectedRow();
        if (selectedRow != -1) {
            int idAdopsi = Integer.parseInt(tableAdopsi.getValueAt(selectedRow, 0).toString());
            String statusBaru = JOptionPane.showInputDialog(this, "Masukkan status baru:", tableAdopsi.getValueAt(selectedRow, 4).toString());
            String catatanBaru = JOptionPane.showInputDialog(this, "Masukkan catatan baru:", tableAdopsi.getValueAt(selectedRow, 5).toString());

            if (statusBaru != null && !statusBaru.trim().isEmpty()) {
                controller.updateStatus(idAdopsi, statusBaru);
            }
            if (catatanBaru != null && !catatanBaru.trim().isEmpty()) {
                controller.updateCatatan(idAdopsi, catatanBaru);
            }
            loadData(); // Refresh tabel setelah update
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableAdopsi.getSelectedRow();
        if (selectedRow != -1) {
            int idAdopsi = Integer.parseInt(tableAdopsi.getValueAt(selectedRow, 0).toString());
            controller.hapusAdopsi(idAdopsi);
            loadData();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnTolakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTolakActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableAdopsi.getSelectedRow();
        if (selectedRow != -1) {
            int idAdopsi = Integer.parseInt(tableAdopsi.getValueAt(selectedRow, 0).toString());
            controller.updateStatus(idAdopsi, "ditolak");
            loadData(); // Refresh tabel setelah update
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin ditolak!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnTolakActionPerformed

    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
        // TODO add your handling code here:
        loadData();
    }//GEN-LAST:event_btnShowAllActionPerformed

    private void btnDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDashboardActionPerformed
        // TODO add your handling code here:
        this.dispose();
        dav = new DashboardAdminView();
        dav.setVisible(true);
        
    }//GEN-LAST:event_btnDashboardActionPerformed

    private void btnManajemenHewanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManajemenHewanActionPerformed
        // TODO add your handling code here:
        this.dispose();
        mhv = new ManajemenHewanView();
        mhv.setVisible(true);
    }//GEN-LAST:event_btnManajemenHewanActionPerformed

    private void btnManajemenAdopsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManajemenAdopsiActionPerformed
        // TODO add your handling code here:
        new ManajemenAdopsi().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnManajemenAdopsiActionPerformed

    private void btnRiwayatAdopsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRiwayatAdopsiActionPerformed
        // TODO add your handling code here:
        new RiwayatAdopsiView().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnRiwayatAdopsiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManajemenAdopsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManajemenAdopsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManajemenAdopsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManajemenAdopsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ManajemenAdopsi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnDashboard;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnManajemenAdopsi;
    private javax.swing.JButton btnManajemenHewan;
    private javax.swing.JButton btnRiwayatAdopsi;
    private javax.swing.JButton btnSetujui;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JButton btnTolak;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableAdopsi;
    private javax.swing.JTextField txtCariIdAdopsi;
    // End of variables declaration//GEN-END:variables
}
